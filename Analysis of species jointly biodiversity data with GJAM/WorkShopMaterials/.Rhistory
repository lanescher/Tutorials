xdata[1:3,]
browseVignettes('gjam')
load("neon.RData")
xdata[1:3,]
ydata[1:3,1:10]
browseVignettes('gjam')
xdata[1:3,]
ydata[1:3,1:10]
dim(xdata)
dim(ydata)
dim(xdata)
dim(ydata)
length(elist$columns)
length(elist$values)
rlist <- list(N = 10, r = 8)
modelList <- list(ng=2000, burnin=800, typeNames = 'DA',
effort = elist, reductList = rlist)
out1    <- gjam(~ TRMMpr + TRMMprAprSepPer + SMOSaprSep + LSTwin + NDVIsum + NDVIwin + elev + u1 + u2 + u3 + clay + sand, xdata, ydata, modelList)
library(gjam)
out1    <- gjam(~ TRMMpr + TRMMprAprSepPer + SMOSaprSep + LSTwin + NDVIsum + NDVIwin + elev + u1 + u2 + u3 + clay + sand, xdata, ydata, modelList)
plotPars  <- list(GRIDPLOTS=T, CLUSTERPLOTS=T,SAVEPLOTS = F)
fit       <- gjamPlot(out1, plotPars)
library(gjam)
load('neon.Rdata')
mammal <- ydata[,c("Dipodomys.ordii")]
hist(mammal,nclass=50, main = "Histogram of the Ord's Kangaroo Rat")
set.seed(202)
a <- 0
b <- 1
nx <- 100
x1 <- seq(-5,5,length.out = nx)
e <- rnorm(nx,0,1.2)
ytrue <- a + b*x1 + e
yout <- ytrue
yout[yout < 0] <- 0
ypredT <- lm(ytrue~x1)
ypredC <- lm(yout~x1)
dataPlot <- as.data.frame(cbind(yout,x1))
source('bayesReg.R')
fitTobit <- bayesReg(yout~x1, dataPlot, ng=10000, TOBIT=T)
par(mfrow = c(1, 2),bty = 'n', mar = c(4, 4, 1, 0.1), cex=0.8, family='serif', pty = "s")
plot(x1,yout,pch = 19, ylim = c(-5, 5),
ylab = expression(italic(y)),
xlab = expression(italic(x)),
xlim = c(-5, 5), col = "dimgray")
points(x1,yout,pch = 19,col = "deepskyblue3")
abline(ypredC, lwd = 3, col = "black")
title('Fig. 4a) Uncensored (linear) regression', adj = 0, font.main = 1, font.lab = 1, cex=0.5)
legend("bottomleft",c("observed","latent"), col = c("deepskyblue3","dimgray"), pch = c(16,16))
plot(x1,ytrue,pch = 19, ylim = c(-5, 5),
ylab = expression(italic(w)),
xlab = expression(italic(x)),
xlim = c(-5, 5), col = "dimgray")
points(x1,yout,pch = 19,col = "deepskyblue3")
abline(fitTobit$beta[1,1],fitTobit$beta[2,1],lwd = 3, col = "black")
title('Fig. 4b) Censored regression (Tobit)', adj = 0, font.main = 1, font.lab = 1, cex=.5)
dim(xdata)
dim(ydata)
length(elist$columns)
length(elist$values)
rlist <- list(N = 10, r = 8)
modelList <- list(ng=2000, burnin=800, typeNames = 'DA',
effort = elist, reductList = rlist)
out1    <- gjam(~ TRMMpr + TRMMprAprSepPer + SMOSaprSep + LSTwin + NDVIsum + NDVIwin + elev + u1 + u2 + u3 + clay + sand, xdata, ydata, modelList)
plotPars  <- list(GRIDPLOTS=T, CLUSTERPLOTS=T,SAVEPLOTS = F)
fit       <- gjamPlot(out1, plotPars)
plotPars  <- list(GRIDPLOTS=T, CLUSTERPLOTS=T,SAVEPLOTS = F)
gjamPlot(out1, plotPars)
